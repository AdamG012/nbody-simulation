<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>asm_exc_page_fault (1 samples, 0.59%)</title><rect x="16.9" y="293" width="7.0" height="15.0" fill="rgb(228,145,25)" rx="2" ry="2" />
<text  x="19.94" y="303.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.59%)</title><rect x="1183.1" y="293" width="6.9" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="1186.06" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.59%)</title><rect x="72.5" y="357" width="6.9" height="15.0" fill="rgb(245,112,45)" rx="2" ry="2" />
<text  x="75.47" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.59%)</title><rect x="364.0" y="197" width="6.9" height="15.0" fill="rgb(228,146,25)" rx="2" ry="2" />
<text  x="367.00" y="207.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (41 samples, 24.12%)</title><rect x="718.0" y="245" width="284.6" height="15.0" fill="rgb(236,109,34)" rx="2" ry="2" />
<text  x="721.00" y="255.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>dl_main (1 samples, 0.59%)</title><rect x="162.7" y="325" width="6.9" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="165.71" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.59%)</title><rect x="30.8" y="357" width="7.0" height="15.0" fill="rgb(245,112,45)" rx="2" ry="2" />
<text  x="33.82" y="367.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.59%)</title><rect x="593.1" y="133" width="6.9" height="15.0" fill="rgb(240,203,38)" rx="2" ry="2" />
<text  x="596.06" y="143.5" ></text>
</g>
<g >
<title>energy (4 samples, 2.35%)</title><rect x="190.5" y="293" width="27.7" height="15.0" fill="rgb(244,205,43)" rx="2" ry="2" />
<text  x="193.47" y="303.5" >e..</text>
</g>
<g >
<title>mmput (1 samples, 0.59%)</title><rect x="613.9" y="277" width="6.9" height="15.0" fill="rgb(234,94,31)" rx="2" ry="2" />
<text  x="616.88" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.59%)</title><rect x="606.9" y="261" width="7.0" height="15.0" fill="rgb(244,144,43)" rx="2" ry="2" />
<text  x="609.94" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.59%)</title><rect x="606.9" y="277" width="7.0" height="15.0" fill="rgb(228,146,25)" rx="2" ry="2" />
<text  x="609.94" y="287.5" ></text>
</g>
<g >
<title>do_idle (43 samples, 25.29%)</title><rect x="718.0" y="309" width="298.5" height="15.0" fill="rgb(240,189,39)" rx="2" ry="2" />
<text  x="721.00" y="319.5" >do_idle</text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.59%)</title><rect x="162.7" y="341" width="6.9" height="15.0" fill="rgb(239,184,37)" rx="2" ry="2" />
<text  x="165.71" y="351.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (32 samples, 18.82%)</title><rect x="370.9" y="149" width="222.2" height="15.0" fill="rgb(238,184,37)" rx="2" ry="2" />
<text  x="373.94" y="159.5" >perf_event_for_each_child</text>
</g>
<g >
<title>[libaugeas.so.0.24.2] (1 samples, 0.59%)</title><rect x="86.4" y="341" width="6.9" height="15.0" fill="rgb(236,147,34)" rx="2" ry="2" />
<text  x="89.35" y="351.5" ></text>
</g>
<g >
<title>abrt-action-gen (2 samples, 1.18%)</title><rect x="23.9" y="373" width="13.9" height="15.0" fill="rgb(247,104,47)" rx="2" ry="2" />
<text  x="26.88" y="383.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 4.71%)</title><rect x="1127.5" y="357" width="55.6" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="1130.53" y="367.5" >[unkn..</text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.59%)</title><rect x="613.9" y="245" width="6.9" height="15.0" fill="rgb(235,170,33)" rx="2" ry="2" />
<text  x="616.88" y="255.5" ></text>
</g>
<g >
<title>BN_set_word (1 samples, 0.59%)</title><rect x="37.8" y="357" width="6.9" height="15.0" fill="rgb(248,141,47)" rx="2" ry="2" />
<text  x="40.76" y="367.5" ></text>
</g>
<g >
<title>nbody (25 samples, 14.71%)</title><rect x="190.5" y="373" width="173.5" height="15.0" fill="rgb(250,169,49)" rx="2" ry="2" />
<text  x="193.47" y="383.5" >nbody</text>
</g>
<g >
<title>__poll (1 samples, 0.59%)</title><rect x="10.0" y="325" width="6.9" height="15.0" fill="rgb(229,141,26)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="10.0" y="357" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.59%)</title><rect x="79.4" y="357" width="7.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="82.41" y="367.5" ></text>
</g>
<g >
<title>PyType_Ready (1 samples, 0.59%)</title><rect x="121.1" y="341" width="6.9" height="15.0" fill="rgb(251,230,51)" rx="2" ry="2" />
<text  x="124.06" y="351.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.59%)</title><rect x="16.9" y="325" width="7.0" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="19.94" y="335.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.59%)</title><rect x="600.0" y="357" width="6.9" height="15.0" fill="rgb(238,140,36)" rx="2" ry="2" />
<text  x="603.00" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.59%)</title><rect x="1002.6" y="229" width="6.9" height="15.0" fill="rgb(240,158,39)" rx="2" ry="2" />
<text  x="1005.59" y="239.5" ></text>
</g>
<g >
<title>[libguile-2.0.so.22.8.1] (1 samples, 0.59%)</title><rect x="107.2" y="357" width="6.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="110.18" y="367.5" ></text>
</g>
<g >
<title>sh (1 samples, 0.59%)</title><rect x="613.9" y="373" width="6.9" height="15.0" fill="rgb(240,152,38)" rx="2" ry="2" />
<text  x="616.88" y="383.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.59%)</title><rect x="176.6" y="197" width="6.9" height="15.0" fill="rgb(243,134,42)" rx="2" ry="2" />
<text  x="179.59" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (14 samples, 8.24%)</title><rect x="620.8" y="277" width="97.2" height="15.0" fill="rgb(245,118,45)" rx="2" ry="2" />
<text  x="623.82" y="287.5" >cpuidle_ent..</text>
</g>
<g >
<title>dl_main (1 samples, 0.59%)</title><rect x="58.6" y="325" width="6.9" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="61.59" y="335.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.59%)</title><rect x="606.9" y="341" width="7.0" height="15.0" fill="rgb(239,184,37)" rx="2" ry="2" />
<text  x="609.94" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (1 samples, 0.59%)</title><rect x="593.1" y="213" width="6.9" height="15.0" fill="rgb(240,154,38)" rx="2" ry="2" />
<text  x="596.06" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (34 samples, 20.00%)</title><rect x="364.0" y="341" width="236.0" height="15.0" fill="rgb(247,154,46)" rx="2" ry="2" />
<text  x="367.00" y="351.5" >__libc_start_main</text>
</g>
<g >
<title>mysqld (1 samples, 0.59%)</title><rect x="183.5" y="373" width="7.0" height="15.0" fill="rgb(241,135,40)" rx="2" ry="2" />
<text  x="186.53" y="383.5" ></text>
</g>
<g >
<title>do_set_cpus_allowed (1 samples, 0.59%)</title><rect x="593.1" y="165" width="6.9" height="15.0" fill="rgb(245,189,44)" rx="2" ry="2" />
<text  x="596.06" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.59%)</title><rect x="606.9" y="293" width="7.0" height="15.0" fill="rgb(228,189,25)" rx="2" ry="2" />
<text  x="609.94" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="23.9" y="357" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="26.88" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.59%)</title><rect x="1009.5" y="293" width="7.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1012.53" y="303.5" ></text>
</g>
<g >
<title>PyUnicode_New (1 samples, 0.59%)</title><rect x="128.0" y="341" width="6.9" height="15.0" fill="rgb(232,226,30)" rx="2" ry="2" />
<text  x="131.00" y="351.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.59%)</title><rect x="593.1" y="117" width="6.9" height="15.0" fill="rgb(242,164,40)" rx="2" ry="2" />
<text  x="596.06" y="127.5" ></text>
</g>
<g >
<title>abrt-server (1 samples, 0.59%)</title><rect x="79.4" y="373" width="7.0" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="82.41" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.59%)</title><rect x="107.2" y="293" width="6.9" height="15.0" fill="rgb(228,146,25)" rx="2" ry="2" />
<text  x="110.18" y="303.5" ></text>
</g>
<g >
<title>[perf] (34 samples, 20.00%)</title><rect x="364.0" y="293" width="236.0" height="15.0" fill="rgb(242,195,41)" rx="2" ry="2" />
<text  x="367.00" y="303.5" >[perf]</text>
</g>
<g >
<title>cpuidle_enter (14 samples, 8.24%)</title><rect x="620.8" y="293" width="97.2" height="15.0" fill="rgb(240,118,38)" rx="2" ry="2" />
<text  x="623.82" y="303.5" >cpuidle_enter</text>
</g>
<g >
<title>[unknown] (25 samples, 14.71%)</title><rect x="190.5" y="357" width="173.5" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="193.47" y="367.5" >[unknown]</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.59%)</title><rect x="107.2" y="325" width="6.9" height="15.0" fill="rgb(228,161,25)" rx="2" ry="2" />
<text  x="110.18" y="335.5" ></text>
</g>
<g >
<title>intel_idle (41 samples, 24.12%)</title><rect x="718.0" y="261" width="284.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="721.00" y="271.5" >intel_idle</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 18.82%)</title><rect x="370.9" y="245" width="222.2" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="373.94" y="255.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.59%)</title><rect x="183.5" y="341" width="7.0" height="15.0" fill="rgb(236,141,34)" rx="2" ry="2" />
<text  x="186.53" y="351.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.59%)</title><rect x="58.6" y="341" width="6.9" height="15.0" fill="rgb(239,184,37)" rx="2" ry="2" />
<text  x="61.59" y="351.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.59%)</title><rect x="1183.1" y="277" width="6.9" height="15.0" fill="rgb(241,184,40)" rx="2" ry="2" />
<text  x="1186.06" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.59%)</title><rect x="613.9" y="309" width="6.9" height="15.0" fill="rgb(237,189,36)" rx="2" ry="2" />
<text  x="616.88" y="319.5" ></text>
</g>
<g >
<title>abrtd (1 samples, 0.59%)</title><rect x="86.4" y="373" width="6.9" height="15.0" fill="rgb(244,104,43)" rx="2" ry="2" />
<text  x="89.35" y="383.5" ></text>
</g>
<g >
<title>ksys_ioctl (32 samples, 18.82%)</title><rect x="370.9" y="197" width="222.2" height="15.0" fill="rgb(232,145,30)" rx="2" ry="2" />
<text  x="373.94" y="207.5" >ksys_ioctl</text>
</g>
<g >
<title>sock_poll (1 samples, 0.59%)</title><rect x="10.0" y="245" width="6.9" height="15.0" fill="rgb(229,175,26)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.59%)</title><rect x="107.2" y="261" width="6.9" height="15.0" fill="rgb(248,162,48)" rx="2" ry="2" />
<text  x="110.18" y="271.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (1 samples, 0.59%)</title><rect x="1176.1" y="309" width="7.0" height="15.0" fill="rgb(231,147,29)" rx="2" ry="2" />
<text  x="1179.12" y="319.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.59%)</title><rect x="176.6" y="293" width="6.9" height="15.0" fill="rgb(241,145,40)" rx="2" ry="2" />
<text  x="179.59" y="303.5" ></text>
</g>
<g >
<title>start_secondary (43 samples, 25.29%)</title><rect x="718.0" y="341" width="298.5" height="15.0" fill="rgb(248,156,47)" rx="2" ry="2" />
<text  x="721.00" y="351.5" >start_secondary</text>
</g>
<g >
<title>init (25 samples, 14.71%)</title><rect x="190.5" y="309" width="173.5" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="193.47" y="319.5" >init</text>
</g>
<g >
<title>lscpu (1 samples, 0.59%)</title><rect x="176.6" y="373" width="6.9" height="15.0" fill="rgb(238,131,36)" rx="2" ry="2" />
<text  x="179.59" y="383.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.59%)</title><rect x="176.6" y="213" width="6.9" height="15.0" fill="rgb(243,163,42)" rx="2" ry="2" />
<text  x="179.59" y="223.5" ></text>
</g>
<g >
<title>start_kernel (14 samples, 8.24%)</title><rect x="620.8" y="341" width="97.2" height="15.0" fill="rgb(237,156,35)" rx="2" ry="2" />
<text  x="623.82" y="351.5" >start_kernel</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="1183.1" y="325" width="6.9" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="1186.06" y="335.5" ></text>
</g>
<g >
<title>proc_reg_read (1 samples, 0.59%)</title><rect x="176.6" y="261" width="6.9" height="15.0" fill="rgb(241,184,40)" rx="2" ry="2" />
<text  x="179.59" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="593.1" y="229" width="6.9" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="596.06" y="239.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.59%)</title><rect x="23.9" y="293" width="6.9" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="26.88" y="303.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.59%)</title><rect x="176.6" y="245" width="6.9" height="15.0" fill="rgb(241,163,40)" rx="2" ry="2" />
<text  x="179.59" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="169.6" y="341" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="172.65" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (32 samples, 18.82%)</title><rect x="370.9" y="53" width="222.2" height="15.0" fill="rgb(236,125,34)" rx="2" ry="2" />
<text  x="373.94" y="63.5" >__intel_pmu_enable_all.constp..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="606.9" y="357" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="609.94" y="367.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.59%)</title><rect x="107.2" y="245" width="6.9" height="15.0" fill="rgb(243,162,41)" rx="2" ry="2" />
<text  x="110.18" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (43 samples, 25.29%)</title><rect x="718.0" y="325" width="298.5" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="721.00" y="335.5" >cpu_startup_entry</text>
</g>
<g >
<title>event_function_call (32 samples, 18.82%)</title><rect x="370.9" y="133" width="222.2" height="15.0" fill="rgb(230,165,28)" rx="2" ry="2" />
<text  x="373.94" y="143.5" >event_function_call</text>
</g>
<g >
<title>tracker-miner-f (25 samples, 14.71%)</title><rect x="1016.5" y="373" width="173.5" height="15.0" fill="rgb(246,158,45)" rx="2" ry="2" />
<text  x="1019.47" y="383.5" >tracker-miner-f</text>
</g>
<g >
<title>exit_mmap (1 samples, 0.59%)</title><rect x="613.9" y="261" width="6.9" height="15.0" fill="rgb(240,142,39)" rx="2" ry="2" />
<text  x="616.88" y="271.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.59%)</title><rect x="1002.6" y="245" width="6.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1005.59" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.59%)</title><rect x="613.9" y="325" width="6.9" height="15.0" fill="rgb(241,154,40)" rx="2" ry="2" />
<text  x="616.88" y="335.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.59%)</title><rect x="1009.5" y="245" width="7.0" height="15.0" fill="rgb(240,154,38)" rx="2" ry="2" />
<text  x="1012.53" y="255.5" ></text>
</g>
<g >
<title>distance (1 samples, 0.59%)</title><rect x="211.3" y="277" width="6.9" height="15.0" fill="rgb(251,177,51)" rx="2" ry="2" />
<text  x="214.29" y="287.5" ></text>
</g>
<g >
<title>main (25 samples, 14.71%)</title><rect x="190.5" y="325" width="173.5" height="15.0" fill="rgb(247,83,46)" rx="2" ry="2" />
<text  x="193.47" y="335.5" >main</text>
</g>
<g >
<title>[perf] (34 samples, 20.00%)</title><rect x="364.0" y="277" width="236.0" height="15.0" fill="rgb(242,195,41)" rx="2" ry="2" />
<text  x="367.00" y="287.5" >[perf]</text>
</g>
<g >
<title>__GI___ioctl (32 samples, 18.82%)</title><rect x="370.9" y="261" width="222.2" height="15.0" fill="rgb(232,119,30)" rx="2" ry="2" />
<text  x="373.94" y="271.5" >__GI___ioctl</text>
</g>
<g >
<title>__set_cpus_allowed_ptr (1 samples, 0.59%)</title><rect x="593.1" y="181" width="6.9" height="15.0" fill="rgb(238,132,37)" rx="2" ry="2" />
<text  x="596.06" y="191.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.59%)</title><rect x="23.9" y="341" width="6.9" height="15.0" fill="rgb(247,184,46)" rx="2" ry="2" />
<text  x="26.88" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="169.6" y="325" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="172.65" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="176.6" y="325" width="6.9" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="179.59" y="335.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.59%)</title><rect x="16.9" y="309" width="7.0" height="15.0" fill="rgb(241,184,39)" rx="2" ry="2" />
<text  x="19.94" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="58.6" y="357" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="61.59" y="367.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.59%)</title><rect x="65.5" y="357" width="7.0" height="15.0" fill="rgb(244,189,43)" rx="2" ry="2" />
<text  x="68.53" y="367.5" ></text>
</g>
<g >
<title>[libgc.so.1.4.3] (1 samples, 0.59%)</title><rect x="100.2" y="357" width="7.0" height="15.0" fill="rgb(235,147,33)" rx="2" ry="2" />
<text  x="103.24" y="367.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1 samples, 0.59%)</title><rect x="155.8" y="341" width="6.9" height="15.0" fill="rgb(228,171,25)" rx="2" ry="2" />
<text  x="158.76" y="351.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 20.00%)</title><rect x="364.0" y="357" width="236.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="367.00" y="367.5" >[unknown]</text>
</g>
<g >
<title>cpu_startup_entry (14 samples, 8.24%)</title><rect x="620.8" y="325" width="97.2" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="623.82" y="335.5" >cpu_startup..</text>
</g>
<g >
<title>PyObject_Str (1 samples, 0.59%)</title><rect x="114.1" y="341" width="7.0" height="15.0" fill="rgb(233,207,31)" rx="2" ry="2" />
<text  x="117.12" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (1 samples, 0.59%)</title><rect x="1183.1" y="309" width="6.9" height="15.0" fill="rgb(237,154,36)" rx="2" ry="2" />
<text  x="1186.06" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.59%)</title><rect x="10.0" y="277" width="6.9" height="15.0" fill="rgb(229,154,26)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>perf_ioctl (32 samples, 18.82%)</title><rect x="370.9" y="181" width="222.2" height="15.0" fill="rgb(232,184,30)" rx="2" ry="2" />
<text  x="373.94" y="191.5" >perf_ioctl</text>
</g>
<g >
<title>show_device (1 samples, 0.59%)</title><rect x="176.6" y="229" width="6.9" height="15.0" fill="rgb(246,155,46)" rx="2" ry="2" />
<text  x="179.59" y="239.5" ></text>
</g>
<g >
<title>abrt-action-ana (1 samples, 0.59%)</title><rect x="16.9" y="373" width="7.0" height="15.0" fill="rgb(242,104,40)" rx="2" ry="2" />
<text  x="19.94" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.59%)</title><rect x="107.2" y="341" width="6.9" height="15.0" fill="rgb(228,145,25)" rx="2" ry="2" />
<text  x="110.18" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.59%)</title><rect x="606.9" y="325" width="7.0" height="15.0" fill="rgb(228,145,25)" rx="2" ry="2" />
<text  x="609.94" y="335.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (16 samples, 9.41%)</title><rect x="1016.5" y="357" width="111.0" height="15.0" fill="rgb(231,147,29)" rx="2" ry="2" />
<text  x="1019.47" y="367.5" >[libsqlite3.s..</text>
</g>
<g >
<title>sed (1 samples, 0.59%)</title><rect x="606.9" y="373" width="7.0" height="15.0" fill="rgb(247,167,47)" rx="2" ry="2" />
<text  x="609.94" y="383.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (1 samples, 0.59%)</title><rect x="1169.2" y="325" width="6.9" height="15.0" fill="rgb(231,147,29)" rx="2" ry="2" />
<text  x="1172.18" y="335.5" ></text>
</g>
<g >
<title>read (1 samples, 0.59%)</title><rect x="176.6" y="341" width="6.9" height="15.0" fill="rgb(241,184,40)" rx="2" ry="2" />
<text  x="179.59" y="351.5" ></text>
</g>
<g >
<title>[libpython3.8.so.1.0] (1 samples, 0.59%)</title><rect x="141.9" y="341" width="6.9" height="15.0" fill="rgb(238,147,36)" rx="2" ry="2" />
<text  x="144.88" y="351.5" ></text>
</g>
<g >
<title>[libguile-2.0.so.22.8.1] (1 samples, 0.59%)</title><rect x="134.9" y="341" width="7.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="137.94" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.59%)</title><rect x="606.9" y="245" width="7.0" height="15.0" fill="rgb(220,170,17)" rx="2" ry="2" />
<text  x="609.94" y="255.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.59%)</title><rect x="58.6" y="309" width="6.9" height="15.0" fill="rgb(241,184,39)" rx="2" ry="2" />
<text  x="61.59" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.59%)</title><rect x="107.2" y="309" width="6.9" height="15.0" fill="rgb(228,189,25)" rx="2" ry="2" />
<text  x="110.18" y="319.5" ></text>
</g>
<g >
<title>perf (34 samples, 20.00%)</title><rect x="364.0" y="373" width="236.0" height="15.0" fill="rgb(243,184,42)" rx="2" ry="2" />
<text  x="367.00" y="383.5" >perf</text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="176.6" y="357" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="179.59" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="10.0" y="341" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.59%)</title><rect x="364.0" y="213" width="6.9" height="15.0" fill="rgb(228,189,25)" rx="2" ry="2" />
<text  x="367.00" y="223.5" ></text>
</g>
<g >
<title>event_function (32 samples, 18.82%)</title><rect x="370.9" y="69" width="222.2" height="15.0" fill="rgb(247,165,46)" rx="2" ry="2" />
<text  x="373.94" y="79.5" >event_function</text>
</g>
<g >
<title>step (20 samples, 11.76%)</title><rect x="225.2" y="293" width="138.8" height="15.0" fill="rgb(243,143,42)" rx="2" ry="2" />
<text  x="228.18" y="303.5" >step</text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (1 samples, 0.59%)</title><rect x="593.1" y="261" width="6.9" height="15.0" fill="rgb(247,164,46)" rx="2" ry="2" />
<text  x="596.06" y="271.5" ></text>
</g>
<g >
<title>do_idle (14 samples, 8.24%)</title><rect x="620.8" y="309" width="97.2" height="15.0" fill="rgb(240,189,39)" rx="2" ry="2" />
<text  x="623.82" y="319.5" >do_idle</text>
</g>
<g >
<title>[perf] (34 samples, 20.00%)</title><rect x="364.0" y="309" width="236.0" height="15.0" fill="rgb(242,195,41)" rx="2" ry="2" />
<text  x="367.00" y="319.5" >[perf]</text>
</g>
<g >
<title>generic_exec_single (32 samples, 18.82%)</title><rect x="370.9" y="101" width="222.2" height="15.0" fill="rgb(238,189,36)" rx="2" ry="2" />
<text  x="373.94" y="111.5" >generic_exec_single</text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="1176.1" y="325" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="1179.12" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="16.9" y="357" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="19.94" y="367.5" ></text>
</g>
<g >
<title>[perf] (1 samples, 0.59%)</title><rect x="364.0" y="261" width="6.9" height="15.0" fill="rgb(242,195,41)" rx="2" ry="2" />
<text  x="367.00" y="271.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.59%)</title><rect x="162.7" y="309" width="6.9" height="15.0" fill="rgb(247,184,46)" rx="2" ry="2" />
<text  x="165.71" y="319.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.59%)</title><rect x="593.1" y="197" width="6.9" height="15.0" fill="rgb(240,164,38)" rx="2" ry="2" />
<text  x="596.06" y="207.5" ></text>
</g>
<g >
<title>__sqrt (1 samples, 0.59%)</title><rect x="280.7" y="277" width="6.9" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="283.71" y="287.5" ></text>
</g>
<g >
<title>__strverscmp (1 samples, 0.59%)</title><rect x="169.6" y="309" width="7.0" height="15.0" fill="rgb(238,132,36)" rx="2" ry="2" />
<text  x="172.65" y="319.5" ></text>
</g>
<g >
<title>runlevel (1 samples, 0.59%)</title><rect x="600.0" y="373" width="6.9" height="15.0" fill="rgb(231,156,29)" rx="2" ry="2" />
<text  x="603.00" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.18%)</title><rect x="1169.2" y="341" width="13.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="1172.18" y="351.5" ></text>
</g>
<g >
<title>abrt-handle-eve (3 samples, 1.76%)</title><rect x="58.6" y="373" width="20.8" height="15.0" fill="rgb(240,104,39)" rx="2" ry="2" />
<text  x="61.59" y="383.5" ></text>
</g>
<g >
<title>Web_Content (1 samples, 0.59%)</title><rect x="10.0" y="373" width="6.9" height="15.0" fill="rgb(241,157,39)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.59%)</title><rect x="613.9" y="293" width="6.9" height="15.0" fill="rgb(237,189,36)" rx="2" ry="2" />
<text  x="616.88" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="593.1" y="245" width="6.9" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="596.06" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="10.0" y="293" width="6.9" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.59%)</title><rect x="1183.1" y="229" width="6.9" height="15.0" fill="rgb(243,140,42)" rx="2" ry="2" />
<text  x="1186.06" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.59%)</title><rect x="364.0" y="245" width="6.9" height="15.0" fill="rgb(228,145,25)" rx="2" ry="2" />
<text  x="367.00" y="255.5" ></text>
</g>
<g >
<title>__sqrt_finite@GLIBC_2.15 (2 samples, 1.18%)</title><rect x="287.6" y="277" width="13.9" height="15.0" fill="rgb(237,132,35)" rx="2" ry="2" />
<text  x="290.65" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="44.7" y="357" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="47.71" y="367.5" ></text>
</g>
<g >
<title>remote_function (32 samples, 18.82%)</title><rect x="370.9" y="85" width="222.2" height="15.0" fill="rgb(247,184,46)" rx="2" ry="2" />
<text  x="373.94" y="95.5" >remote_function</text>
</g>
<g >
<title>native_write_msr (32 samples, 18.82%)</title><rect x="370.9" y="37" width="222.2" height="15.0" fill="rgb(241,158,40)" rx="2" ry="2" />
<text  x="373.94" y="47.5" >native_write_msr</text>
</g>
<g >
<title>[libaugeas.so.0.24.2] (1 samples, 0.59%)</title><rect x="44.7" y="341" width="6.9" height="15.0" fill="rgb(236,147,34)" rx="2" ry="2" />
<text  x="47.71" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="1183.1" y="341" width="6.9" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="1186.06" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.59%)</title><rect x="10.0" y="261" width="6.9" height="15.0" fill="rgb(229,189,26)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.59%)</title><rect x="1183.1" y="245" width="6.9" height="15.0" fill="rgb(240,140,38)" rx="2" ry="2" />
<text  x="1186.06" y="255.5" ></text>
</g>
<g >
<title>intel_idle (14 samples, 8.24%)</title><rect x="620.8" y="261" width="97.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="623.82" y="271.5" >intel_idle</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.59%)</title><rect x="613.9" y="229" width="6.9" height="15.0" fill="rgb(247,170,46)" rx="2" ry="2" />
<text  x="616.88" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (42 samples, 24.71%)</title><rect x="718.0" y="277" width="291.5" height="15.0" fill="rgb(245,118,45)" rx="2" ry="2" />
<text  x="721.00" y="287.5" >cpuidle_enter_state</text>
</g>
<g >
<title>cpuidle_enter (42 samples, 24.71%)</title><rect x="718.0" y="293" width="291.5" height="15.0" fill="rgb(240,118,38)" rx="2" ry="2" />
<text  x="721.00" y="303.5" >cpuidle_enter</text>
</g>
<g >
<title>all (170 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="10.0" y="309" width="6.9" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (32 samples, 18.82%)</title><rect x="370.9" y="213" width="222.2" height="15.0" fill="rgb(232,154,30)" rx="2" ry="2" />
<text  x="373.94" y="223.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>magnitude (1 samples, 0.59%)</title><rect x="218.2" y="293" width="7.0" height="15.0" fill="rgb(245,89,44)" rx="2" ry="2" />
<text  x="221.24" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (32 samples, 18.82%)</title><rect x="370.9" y="117" width="222.2" height="15.0" fill="rgb(238,126,36)" rx="2" ry="2" />
<text  x="373.94" y="127.5" >smp_call_function_single</text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.59%)</title><rect x="23.9" y="309" width="6.9" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="26.88" y="319.5" ></text>
</g>
<g >
<title>__libc_pread64 (1 samples, 0.59%)</title><rect x="1183.1" y="357" width="6.9" height="15.0" fill="rgb(237,154,36)" rx="2" ry="2" />
<text  x="1186.06" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.59%)</title><rect x="1009.5" y="261" width="7.0" height="15.0" fill="rgb(240,174,39)" rx="2" ry="2" />
<text  x="1012.53" y="271.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.59%)</title><rect x="1002.6" y="261" width="6.9" height="15.0" fill="rgb(238,164,36)" rx="2" ry="2" />
<text  x="1005.59" y="271.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.59%)</title><rect x="1183.1" y="261" width="6.9" height="15.0" fill="rgb(241,189,40)" rx="2" ry="2" />
<text  x="1186.06" y="271.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.59%)</title><rect x="51.6" y="357" width="7.0" height="15.0" fill="rgb(244,189,43)" rx="2" ry="2" />
<text  x="54.65" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="148.8" y="341" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="151.82" y="351.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.59%)</title><rect x="613.9" y="213" width="6.9" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="616.88" y="223.5" ></text>
</g>
<g >
<title>secondary_startup_64 (57 samples, 33.53%)</title><rect x="620.8" y="357" width="395.7" height="15.0" fill="rgb(232,170,30)" rx="2" ry="2" />
<text  x="623.82" y="367.5" >secondary_startup_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="613.9" y="357" width="6.9" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="616.88" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="183.5" y="357" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="186.53" y="367.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (6 samples, 3.53%)</title><rect x="1127.5" y="341" width="41.7" height="15.0" fill="rgb(231,147,29)" rx="2" ry="2" />
<text  x="1130.53" y="351.5" >[li..</text>
</g>
<g >
<title>iconv (1 samples, 0.59%)</title><rect x="169.6" y="373" width="7.0" height="15.0" fill="rgb(238,180,37)" rx="2" ry="2" />
<text  x="172.65" y="383.5" ></text>
</g>
<g >
<title>[libcrypto.so.1.1.1g] (1 samples, 0.59%)</title><rect x="93.3" y="357" width="6.9" height="15.0" fill="rgb(244,147,43)" rx="2" ry="2" />
<text  x="96.29" y="367.5" ></text>
</g>
<g >
<title>magnitude (4 samples, 2.35%)</title><rect x="336.2" y="277" width="27.8" height="15.0" fill="rgb(245,89,44)" rx="2" ry="2" />
<text  x="339.24" y="287.5" >m..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.59%)</title><rect x="606.9" y="309" width="7.0" height="15.0" fill="rgb(228,161,25)" rx="2" ry="2" />
<text  x="609.94" y="319.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (14 samples, 8.24%)</title><rect x="620.8" y="245" width="97.2" height="15.0" fill="rgb(236,109,34)" rx="2" ry="2" />
<text  x="623.82" y="255.5" >mwait_idle_..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="86.4" y="357" width="6.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="89.35" y="367.5" ></text>
</g>
<g >
<title>gdb (11 samples, 6.47%)</title><rect x="93.3" y="373" width="76.3" height="15.0" fill="rgb(235,194,33)" rx="2" ry="2" />
<text  x="96.29" y="383.5" >gdb</text>
</g>
<g >
<title>[libguile-2.0.so.22.8.1] (1 samples, 0.59%)</title><rect x="148.8" y="325" width="7.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="151.82" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="613.9" y="341" width="6.9" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="616.88" y="351.5" ></text>
</g>
<g >
<title>abrt-action-sav (3 samples, 1.76%)</title><rect x="37.8" y="373" width="20.8" height="15.0" fill="rgb(226,104,23)" rx="2" ry="2" />
<text  x="40.76" y="383.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.59%)</title><rect x="16.9" y="341" width="7.0" height="15.0" fill="rgb(239,184,37)" rx="2" ry="2" />
<text  x="19.94" y="351.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.59%)</title><rect x="1009.5" y="277" width="7.0" height="15.0" fill="rgb(237,132,35)" rx="2" ry="2" />
<text  x="1012.53" y="287.5" ></text>
</g>
<g >
<title>__libc_start_main (25 samples, 14.71%)</title><rect x="190.5" y="341" width="173.5" height="15.0" fill="rgb(247,154,46)" rx="2" ry="2" />
<text  x="193.47" y="351.5" >__libc_start_main</text>
</g>
<g >
<title>distance (5 samples, 2.94%)</title><rect x="301.5" y="277" width="34.7" height="15.0" fill="rgb(251,177,51)" rx="2" ry="2" />
<text  x="304.53" y="287.5" >di..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.59%)</title><rect x="364.0" y="229" width="6.9" height="15.0" fill="rgb(228,161,25)" rx="2" ry="2" />
<text  x="367.00" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="176.6" y="309" width="6.9" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="179.59" y="319.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.59%)</title><rect x="176.6" y="277" width="6.9" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="179.59" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 18.82%)</title><rect x="370.9" y="229" width="222.2" height="15.0" fill="rgb(232,189,30)" rx="2" ry="2" />
<text  x="373.94" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown] (1 samples, 0.59%)</title><rect x="169.6" y="357" width="7.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="172.65" y="367.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.59%)</title><rect x="107.2" y="277" width="6.9" height="15.0" fill="rgb(239,183,37)" rx="2" ry="2" />
<text  x="110.18" y="287.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.59%)</title><rect x="23.9" y="325" width="6.9" height="15.0" fill="rgb(238,149,36)" rx="2" ry="2" />
<text  x="26.88" y="335.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 4.71%)</title><rect x="114.1" y="357" width="55.5" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="117.12" y="367.5" >[unkn..</text>
</g>
<g >
<title>[perf] (34 samples, 20.00%)</title><rect x="364.0" y="325" width="236.0" height="15.0" fill="rgb(242,195,41)" rx="2" ry="2" />
<text  x="367.00" y="335.5" >[perf]</text>
</g>
<g >
<title>_perf_ioctl (32 samples, 18.82%)</title><rect x="370.9" y="165" width="222.2" height="15.0" fill="rgb(232,163,30)" rx="2" ry="2" />
<text  x="373.94" y="175.5" >_perf_ioctl</text>
</g>
<g >
<title>swapper (57 samples, 33.53%)</title><rect x="620.8" y="373" width="395.7" height="15.0" fill="rgb(243,141,41)" rx="2" ry="2" />
<text  x="623.82" y="383.5" >swapper</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.59%)</title><rect x="593.1" y="149" width="6.9" height="15.0" fill="rgb(240,203,39)" rx="2" ry="2" />
<text  x="596.06" y="159.5" ></text>
</g>
</g>
</svg>
